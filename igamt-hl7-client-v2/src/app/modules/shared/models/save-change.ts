export interface IChange<T = any> {
  location: string;
  propertyType: string;
  propertyValue: T;
  oldPropertyValue?: T;
  position?: number;
  changeType: ChangeType;
}

export enum ChangeType {
  UPDATE = 'UPDATE',
  ADD = 'ADD',
  DELETE = 'DELETE',
}

export enum PropertyType {
  USAGE = 'USAGE',
  DATATYPE = 'DATATYPE',
  SEGMENTREF = 'SEGMENTREF',
  CARDINALITYMAX = 'CARDINALITYMAX',
  LENGTHMIN = 'LENGTHMIN',
  LENGTHMAX = 'LENGTHMAX',
  CONFLENGTH = 'CONFLENGTH',
  CARDINALITYMIN = 'CARDINALITYMIN',
  PREDEF = 'PREDEF',
  POSTDEF = 'POSTDEF',
  VALUESET = 'VALUESET',
  COMMENT = 'COMMENT',
  DEFINITIONTEXT = 'DEFINITIONTEXT',
  EXT = 'EXT',
  DESCRIPTION = 'DESCRIPTION',
  AUTHORNOTES = 'AUTHORNOTES',
  USAGENOTES = 'USAGENOTES',
  CONSTANTVALUE = 'CONSTANTVALUE',
  PREDICATE = 'PREDICATE',
  CODES = 'CODES',
  CODESYSTEM = 'CODESYSTEM',
  EXTENSIBILITY = 'EXTENSIBILITY',
  CONTENTDEFINITION = 'CONTENTDEFINITION',
  STABILITY = 'STABILITY',
  BINDINGIDENTIFIER = 'BINDINGIDENTIFIER',
  URL = 'URL',
  INTENSIONALCOMMENT = 'INTENSIONALCOMMENT',
  STATEMENT = 'STATEMENT',
  SINGLECODE = 'SINGLECODE',
  NAME = 'NAME',
  AUTHORS = 'AUTHORS',
  PROFILETYPE = 'PROFILETYPE',
  ROLE = 'ROLE',
  PROFILEIDENTIFIER = 'PROFILEIDENTIFIER',
  ORGANISATION = 'ORGANISATION',
  COCONSTRAINTBINDINGS = 'COCONSTRAINTBINDINGS',
}
